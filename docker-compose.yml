version: "3.3"

services:
    portainer:
        image: portainer/portainer:1.22.2
        command: -H unix:///var/run/docker.sock
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - portainer_data:/data
        ports:
            - "9000:9000"
        deploy:
            labels:
                - "traefik.docker.network=traefik-net"
                - "traefik.port=9000"
                - "traefik.frontend.rule=Host:port.srv2.disarm.io"
            placement:
                constraints: [node.role == manager]
        networks:
            - traefik-net
    traefik:
        image: traefik:v1.7.16
        # For production remote the 8085:8080 port mapping below
        ports:
            - "80:80" # The HTTP port, not the web UI port
            - "8085:8080" # Keep for debugging, remove for production
            - "443:443"
        volumes:
            - ./acme:/acme
            - ./traefik.toml:/traefik.toml
            - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
        deploy:
            labels:
                - "traefik.frontend.rule=Host:traefik.srv2.disarm.io"
                - "traefik.port=8080"
                - "traefik.docker.network=traefik-net"
            placement:
                constraints: [node.role == manager]
        networks:
            - traefik-net

    squid:
        image: alatas/squid-alpine-ssl:r3
        environment:
            - CN=squid.local
            - O=squid
            - OU=squid
            - C=US
        ports:
            - "3128:3128"
            - "4128:4128"
        volumes:
            - ./squid/log:/var/log/
            - ./squid/conf/squid.conf:/etc/squid/squid.conf
            - ./squid/cache:/var/cache
            - ./squid/cert:/etc/squid-cert

networks:
    traefik-net:
        driver: overlay
        external: true
volumes:
    portainer_data:
